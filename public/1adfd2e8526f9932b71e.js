import*as THREE from"https://cdn.jsdelivr.net/npm/three@0.145.0/build/three.module.js";import{OrbitControls}from"https://cdn.jsdelivr.net/npm/three@0.145.0/examples/jsm/controls/OrbitControls.js";import Renderer from"./renderer.js";import MainCamera from"./cameras/mainCamera.js";import SolarSystem from"./models/solarSystem.js";import*as TWEEN from"https://cdn.jsdelivr.net/npm/@tweenjs/tween.js@18.6.4/dist/tween.esm.js";console.log("Starting Solar System Application...");const container=document.getElementById("canvas-container");if(!container)throw console.error("Could not find canvas container"),new Error("Could not find canvas container");const scene=new THREE.Scene;scene.background=new THREE.Color(51);const camera=new MainCamera,rendererInstance=new Renderer(container),renderer=rendererInstance.renderer;renderer.shadowMap.enabled=!0,renderer.shadowMap.type=THREE.PCFSoftShadowMap,container.appendChild(renderer.domElement);const ambientLight=new THREE.AmbientLight(16777215,.5);scene.add(ambientLight);const sunLight=new THREE.DirectionalLight(16777215,1);sunLight.position.set(0,10,0),sunLight.castShadow=!0,scene.add(sunLight);const controls=new OrbitControls(camera,renderer.domElement);controls.enableDamping=!0,controls.dampingFactor=.05,controls.minDistance=20,controls.maxDistance=100,controls.screenSpacePanning=!1,controls.maxPolarAngle=Math.PI/2,console.log("Creating solar system...");const solarSystem=new SolarSystem(scene,camera,renderer);solarSystem.controls=controls,solarSystem.setupClickEvents(camera,renderer);let webcamStream=null;const webcamElement=document.getElementById("webcam");let handTracker=null;async function initWebcam(){try{const e=await navigator.mediaDevices.getUserMedia({video:{width:640,height:480,frameRate:{ideal:30}}});return webcamStream=e,webcamElement.srcObject=e,await webcamElement.play(),console.log("Webcam initialized successfully"),e}catch(e){throw console.error("Error accessing webcam:",e),document.getElementById("error-message").innerText="Webcam not working: "+e.message,document.getElementById("error-message").style.display="block",e}}function animate(){requestAnimationFrame(animate),controls.update(),TWEEN.update(),solarSystem.update(),renderer.render(scene,camera)}async function main(){try{animate(),requestAnimationFrame(animate)}catch(e){console.error("Initialization failed:",e),document.getElementById("error-message").innerText="Initialization failed: "+e.message,document.getElementById("error-message").style.display="block"}}window.addEventListener("resize",(()=>{camera.aspect=window.innerWidth/window.innerHeight,camera.updateProjectionMatrix(),camera.updateAspect(),renderer.setSize(window.innerWidth,window.innerHeight)})),main();